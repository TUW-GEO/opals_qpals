
import AddInfo.AddInfo
import Algebra.Algebra
import Bounds.Bounds
import Cell.Cell
import Contouring.Contouring
import Convolution.Convolution
import Diff.Diff
import DirectGeoref.DirectGeoref
import EchoRatio.EchoRatio
import Export.Export
import Fullwave.Fullwave
import GeorefApprox.GeorefApprox
import Grid.Grid
import GridFeature.GridFeature
import Histo.Histo
import ICP.ICP
import Import.Import
import Info.Info
import LSM.LSM
import Morph.Morph
import Normals.Normals
import Openness.Openness
import Overlap.Overlap
import PointStats.PointStats
import RadioCal.RadioCal
import Rasterize.Rasterize
import RobFilter.RobFilter
import Shade.Shade
import Simplify.Simplify
import StatFilter.StatFilter
import TIN.TIN
import ZColor.ZColor
moddict = {
'AddInfo': AddInfo.AddInfo.AddInfo(),
'Algebra': Algebra.Algebra.Algebra(),
'Bounds': Bounds.Bounds.Bounds(),
'Cell': Cell.Cell.Cell(),
'Contouring': Contouring.Contouring.Contouring(),
'Convolution': Convolution.Convolution.Convolution(),
'Diff': Diff.Diff.Diff(),
'DirectGeoref': DirectGeoref.DirectGeoref.DirectGeoref(),
'EchoRatio': EchoRatio.EchoRatio.EchoRatio(),
'Export': Export.Export.Export(),
'Fullwave': Fullwave.Fullwave.Fullwave(),
'GeorefApprox': GeorefApprox.GeorefApprox.GeorefApprox(),
'Grid': Grid.Grid.Grid(),
'GridFeature': GridFeature.GridFeature.GridFeature(),
'Histo': Histo.Histo.Histo(),
'ICP': ICP.ICP.ICP(),
'Import': Import.Import.Import(),
'Info': Info.Info.Info(),
'LSM': LSM.LSM.LSM(),
'Morph': Morph.Morph.Morph(),
'Normals': Normals.Normals.Normals(),
'Openness': Openness.Openness.Openness(),
'Overlap': Overlap.Overlap.Overlap(),
'PointStats': PointStats.PointStats.PointStats(),
'RadioCal': RadioCal.RadioCal.RadioCal(),
'Rasterize': Rasterize.Rasterize.Rasterize(),
'RobFilter': RobFilter.RobFilter.RobFilter(),
'Shade': Shade.Shade.Shade(),
'Simplify': Simplify.Simplify.Simplify(),
'StatFilter': StatFilter.StatFilter.StatFilter(),
'TIN': TIN.TIN.TIN(),
'ZColor': ZColor.ZColor.ZColor()}
def getFromName(Name):
    return moddict[Name]